<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="KPControl_AI" xml:space="preserve">
    <value>AI</value>
  </data>
  <data name="KPControl_AllowNull" xml:space="preserve">
    <value>Permite Nulo</value>
  </data>
  <data name="KPControl_AssemblyName" xml:space="preserve">
    <value>Assembly Name:</value>
  </data>
  <data name="KPControl_AutoIncrement" xml:space="preserve">
    <value>Auto-Incremento</value>
  </data>
  <data name="KPControl_BasicSettings" xml:space="preserve">
    <value>Configuração básica</value>
  </data>
  <data name="KPControl_Column" xml:space="preserve">
    <value>Coluna</value>
  </data>
  <data name="KPControl_ComponentForm" xml:space="preserve">
    <value>Componente Form</value>
  </data>
  <data name="KPControl_ComponentView" xml:space="preserve">
    <value>Componente View</value>
  </data>
  <data name="KPControl_Constraint" xml:space="preserve">
    <value>Constraint</value>
  </data>
  <data name="KPControl_CSharpType" xml:space="preserve">
    <value>Tipo C#</value>
  </data>
  <data name="KPControl_DataLength" xml:space="preserve">
    <value>DataLength</value>
  </data>
  <data name="KPControl_DBOwner" xml:space="preserve">
    <value>Owner do banco de dados</value>
  </data>
  <data name="KPControl_DisplayName" xml:space="preserve">
    <value>Título</value>
  </data>
  <data name="KPControl_EntityBOFileDir" xml:space="preserve">
    <value>Dir. arquivo EntityBO:</value>
  </data>
  <data name="KPControl_EntityBONamespace" xml:space="preserve">
    <value>Namespace (EntityBO):</value>
  </data>
  <data name="KPControl_EntityFileDir" xml:space="preserve">
    <value>Dir. arquivo Entity:</value>
  </data>
  <data name="KPControl_EntityName" xml:space="preserve">
    <value>Entity Name:</value>
  </data>
  <data name="KPControl_EntityNamespace" xml:space="preserve">
    <value>Namespace (Entity):</value>
  </data>
  <data name="KPControl_FilterTable" xml:space="preserve">
    <value>Filtrar tabela...</value>
  </data>
  <data name="KPControl_FKColumn" xml:space="preserve">
    <value>Coluna FK</value>
  </data>
  <data name="KPControl_FKTable" xml:space="preserve">
    <value>Tabela FK</value>
  </data>
  <data name="KPControl_ForeingKey" xml:space="preserve">
    <value>Chave Estrangeira</value>
  </data>
  <data name="KPControl_FormFilesDir" xml:space="preserve">
    <value>Dir Arquivos Forms:</value>
  </data>
  <data name="KPControl_Generate" xml:space="preserve">
    <value>&amp;Gerar</value>
  </data>
  <data name="KPControl_Lenght" xml:space="preserve">
    <value>Tamanho</value>
  </data>
  <data name="KPControl_MappedDataType" xml:space="preserve">
    <value>MappedDataType</value>
  </data>
  <data name="KPControl_MaskType" xml:space="preserve">
    <value>MaskType</value>
  </data>
  <data name="KPControl_Null" xml:space="preserve">
    <value>Nulo</value>
  </data>
  <data name="KPControl_NumericPrecision" xml:space="preserve">
    <value>Casas Inteiras</value>
  </data>
  <data name="KPControl_NumericScale" xml:space="preserve">
    <value>Casas Decimais</value>
  </data>
  <data name="KPControl_PK" xml:space="preserve">
    <value>PK</value>
  </data>
  <data name="KPControl_PrimaryKey" xml:space="preserve">
    <value>Chave Primária</value>
  </data>
  <data name="KPControl_TableDefinition" xml:space="preserve">
    <value>Definição da tabela</value>
  </data>
  <data name="KPControl_Type" xml:space="preserve">
    <value>Tipo</value>
  </data>
  <data name="KPControl_UN" xml:space="preserve">
    <value>UN</value>
  </data>
  <data name="KPControl_UniqueKey" xml:space="preserve">
    <value>Chave Única</value>
  </data>
  <data name="KPEntity_Category_Property" xml:space="preserve">
    <value>Propriedade</value>
  </data>
  <data name="KPEntity_Title" xml:space="preserve">
    <value>Título</value>
  </data>
  <data name="KPEntity_Title_Description" xml:space="preserve">
    <value>Título do campo. O Título por padrão vem da entidade, porém é possível sobrescreve-lo na tela caso preencha este propriedade.</value>
  </data>
  <data name="KPEntity_Events" xml:space="preserve">
    <value>Eventos</value>
  </data>
  <data name="KPEntity_Height" xml:space="preserve">
    <value>Altura</value>
  </data>
  <data name="KPEntity_Height_Description" xml:space="preserve">
    <value>Determina a altura do controle.</value>
  </data>
  <data name="KPEntity_IsMultiline" xml:space="preserve">
    <value>Multi-linha</value>
  </data>
  <data name="KPEntity_IsMultiline_Description" xml:space="preserve">
    <value>Define que a caixa de texto terá mais de uma linha.</value>
  </data>
  <data name="KPEntity_IsRequired" xml:space="preserve">
    <value>Obrigatório</value>
  </data>
  <data name="KPEntity_IsRequired_Description" xml:space="preserve">
    <value>Adiciona um "*" no controle evidenciando que ele é obrigatório.</value>
  </data>
  <data name="KPEntity_KPEventTextLostFocus_Description" xml:space="preserve">
    <value>Evento lançado quando o controle perde o foco.</value>
  </data>
  <data name="KPEntity_MaskType" xml:space="preserve">
    <value>Máscara</value>
  </data>
  <data name="KPEntity_MaskType_Description" xml:space="preserve">
    <value>Determina a máscara de caracteres que o controle irá obrigar.</value>
  </data>
  <data name="KPEntity_Width" xml:space="preserve">
    <value>Largura</value>
  </data>
  <data name="KPEntity_Width_Description" xml:space="preserve">
    <value>Determina a largura do controle.</value>
  </data>
  <data name="KPEntity_Mapping_FK" xml:space="preserve">
    <value>Mapeamento FK</value>
  </data>
  <data name="KP_Description" xml:space="preserve">
    <value>Descrição</value>
  </data>
  <data name="KP_PleaseSelectTable" xml:space="preserve">
    <value>Por favor, selecione uma tabela para gerar o código fonte.</value>
  </data>
  <data name="KPEntity_HeaderName_Description" xml:space="preserve">
    <value>Título do campo na Grid. [HeaderName] representa a nomeação da coluna do grid. Caso não seja preenchida, automaticamente será incluído o valor que foi definido no título da propriedade na entidade.</value>
  </data>
  <data name="KPEntity_IsSortable" xml:space="preserve">
    <value>Ordenável</value>
  </data>
  <data name="KPEntity_IsSortable_Description" xml:space="preserve">
    <value>Determina se a coluna no grid aceita ordenação.</value>
  </data>
  <data name="KPEntity_IsVisible" xml:space="preserve">
    <value>Visível</value>
  </data>
  <data name="KPEntity_IsVisible_Description" xml:space="preserve">
    <value>Determina se a coluna do grid será visualizada.</value>
  </data>
  <data name="KPEntity_CustomFalse" xml:space="preserve">
    <value>Valor [Falso]</value>
  </data>
  <data name="KPEntity_CustomFalse_Description" xml:space="preserve">
    <value>Valor customizado quando o campo receber valor [False] - Falso</value>
  </data>
  <data name="KPEntity_CustomTrue" xml:space="preserve">
    <value>Valor [Verdadeiro]</value>
  </data>
  <data name="KPEntity_CustomTrue_Description" xml:space="preserve">
    <value>Valor customizado quando o campo receber valor [True] - Verdadeiro</value>
  </data>
  <data name="KPEntity_DescriptionWidth" xml:space="preserve">
    <value>Largura da descrição</value>
  </data>
  <data name="KPEntity_DescriptionWidth_Description" xml:space="preserve">
    <value>Largura do controle para visualização da descrição da FK.</value>
  </data>
  <data name="KPEntity_FieldNameDescription" xml:space="preserve">
    <value>Nome Prop. FK</value>
  </data>
  <data name="KPEntity_FieldNameDescription_Description" xml:space="preserve">
    <value>Nome da propridade da entidade FK, terá como objetivo retornar a descrição para o controle.</value>
  </data>
  <data name="KPEntity_KPEventDeleteLine_Description" xml:space="preserve">
    <value>Evento lançado quando o usuário deleta uma linha da grid. </value>
  </data>
  <data name="KPEntity_KPEventZoomLostFocus_Description" xml:space="preserve">
    <value>Evento lançado quando o usuário sai do foco do controle.</value>
  </data>
  <data name="KPEntity_Category_ZoomConfig" xml:space="preserve">
    <value>Zoom [Configuração]</value>
  </data>
  <data name="KPEntity_DisplaySearchField" xml:space="preserve">
    <value>DisplaySearchField</value>
  </data>
  <data name="KPEntity_DisplaySearchField_Description" xml:space="preserve">
    <value>DisplaySearchField_Description</value>
  </data>
  <data name="KPEntity_FieldReturnId" xml:space="preserve">
    <value>Propriedade ID retorno</value>
  </data>
  <data name="KPEntity_FieldReturnId_Description" xml:space="preserve">
    <value>Propriedade que terá seu valor guardado na chave do Zoom.</value>
  </data>
  <data name="KPEntity_FieldReturnText" xml:space="preserve">
    <value>Propridade texto</value>
  </data>
  <data name="KPEntity_FieldReturnText_Description" xml:space="preserve">
    <value>Propriedade que terá seu valor visualizável no campo descrição do Zoom.</value>
  </data>
  <data name="KPEntity_HeightZoom" xml:space="preserve">
    <value>Altura tela Zoom</value>
  </data>
  <data name="KPEntity_HeightZoom_Description" xml:space="preserve">
    <value>Altura da tela do Zoom.</value>
  </data>
  <data name="KPEntity_SearchByField" xml:space="preserve">
    <value>Propriedade campo de busca</value>
  </data>
  <data name="KPEntity_SearchByField_Description" xml:space="preserve">
    <value>Propriedade que terá como alvo o campo que o Zoom fará as pesquisas.</value>
  </data>
  <data name="KPEntity_Title_Zoom" xml:space="preserve">
    <value>Título Zoom</value>
  </data>
  <data name="KPEntity_Title_Zoom_Description" xml:space="preserve">
    <value>Título da tela do Zoom ao abrir.</value>
  </data>
  <data name="KPEntity_WidthZoom" xml:space="preserve">
    <value>Largura tela Zoom</value>
  </data>
  <data name="KPEntity_WidthZoom_Description" xml:space="preserve">
    <value>Largura da tela do Zoom.</value>
  </data>
</root>